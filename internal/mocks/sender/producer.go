// Code generated by mockery v2.12.1. DO NOT EDIT.

package sender

import (
	context "context"

	model "github.com/Sugar-pack/test-task/internal/model"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Producer is an autogenerated mock type for the Producer type
type Producer struct {
	mock.Mock
}

// PublishMessage provides a mock function with given fields: ctx, contentType, message
func (_m *Producer) PublishMessage(ctx context.Context, contentType string, message *model.Message) error {
	ret := _m.Called(ctx, contentType, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *model.Message) error); ok {
		r0 = rf(ctx, contentType, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewProducer creates a new instance of Producer. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewProducer(t testing.TB) *Producer {
	mock := &Producer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
