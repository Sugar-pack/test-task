// Code generated by mockery v2.12.1. DO NOT EDIT.

package qualifier

import (
	context "context"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// CountryQualifier is an autogenerated mock type for the CountryQualifier type
type CountryQualifier struct {
	mock.Mock
}

// QualifyCountry provides a mock function with given fields: ctx, ip
func (_m *CountryQualifier) QualifyCountry(ctx context.Context, ip string) bool {
	ret := _m.Called(ctx, ip)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, ip)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewCountryQualifier creates a new instance of CountryQualifier. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewCountryQualifier(t testing.TB) *CountryQualifier {
	mock := &CountryQualifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
